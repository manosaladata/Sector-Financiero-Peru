exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2018-12-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="di2018.RDS")
di2018<-i
#View(di2018)
} # DICIEMBRE 2018
{
############################################ ENERO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-en2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","Cencosud","ICBC",
"Total Empresas Financieras")
#View(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-01-31")
#i[is.na(i)] <- 0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="en2019.RDS")
en2019<-i
} # ENERO 2019
{
############################################ FEBRERO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-fe2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","Cencosud","ICBC",
"Total Empresas Financieras")
#View(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-02-28")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="fe2019.RDS")
fe2019<-i
} # FEBRERO 2019
{
############################################ MARZO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-ma2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
#names(a)
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
#names(a)
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-03-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="ma2019.RDS")
ma2019<-i
} # MARZO 2019
{
############################################ ABRIL 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-ab2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
#names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-04-30")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="ab2019.RDS")
ab2019<-i
#View(ab2019)
} # ABRIL 2019
{
############################################ MAYO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-my2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-05-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="my2019.RDS")
my2019<-i
#View(my2019)
} # MAYO 2019
{
############################################ JUNIO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-jn2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-06-30")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="jn2019.RDS")
jn2019<-i
#View(jn2019)
} # JUNIO 2019
{
############################################ JULIO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-jl2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
#names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-07-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="jl2019.RDS")
jl2019<-i
#View(jl2019)
} # JULIO 2019
{
############################################ AGOSTO 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-ag2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-08-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="ag2019.RDS")
ag2019<-i
#View(ag2019)
} # AGOSTO 2019
{
############################################ SETIEMBRE 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-se2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-09-30")
#View(se2019)
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="se2019.RDS")
se2019<-i
#View(se2019)
} # SETIEMBRE 2019
{
############################################ OCTUBRE 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-oc2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","Cencosud","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-10-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="oc2019.RDS")
oc2019<-i
#View(oc2019)
} # OCTUBRE 2019
{
############################################ NOVIEMBRE 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-no2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-11-30")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="no2019.RDS")
no2019<-i
#View(no2019)
} # NOVIEMBRE 2019
{
############################################ DICIEMBRE 2019 ####################################################
#///////////////////////////////////////////////////////////////////////////////////////////////////////////
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/raw data/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros/2019")
a<-read_xlsx("B-2401-di2019.xls",skip = 5) #quitamos 5 espacios (título y 4 1ras filas)
a<-a[complete.cases(a),] # solo elegimos filas completas (sin vacios)
options(scipen=999) # para desactivar la nomenclatura cientifica de numeros
#View(a)
names(a)
names(a)[10] #seleccionamos el valor 10
a<-a[,-10] # quitamos la columna 10 #usa dplyr como ejercicio recuerda usar "-" y select
names(a)<- c("variables", "BBVA","B. del Comercio", "BCP",
"Pichincha","BIF","Scotiabank",
"Citibank","Interbank","Mibanco",
"GNB","Falabella","Santander","Ripley","Azteca","ICBC",
"Total Empresas Financieras")
#View(a)
#names(a)
exc = !names(a) %in% "variables" # una forma de elegir todo excepto una columna de un vector
exc # va a aplicar todo excepto a la primera columna
a[,exc] # ven? no aparece la columns "variables"
a[,exc] = sapply(a[,exc],as.character) # lo convierto a character. Es buena practica convertir siempre a character tus datos numericos y luego pasarlos a numeric recien. Por que? Porque a veces por alguna razon te puede salir tipo factor o character y tener problemas y no darte cuenta hasta el proceso de modelacion
a[,exc] = sapply(a[,exc],as.numeric) # lo convierto a numerico
a[,exc] = round(a[,exc],2) #redondeo a 2 cifras
#View(a)
a %>% gather() #%>% View() #REUNIR TODAS LAS COLUMNAS EN UNA 1RA UNO DEBAJO DE OTRA
a %>% gather(Bancos) #%>% View() #nombre de la 1ra columna: "Bancos"
a %>% gather(Bancos,valores) #%>% View() #nombre de la 2da columna: "valores"
a %>% gather(Bancos,valores,-variables) #%>% #View() #Agrupar por la observaciones "variables"
b<-a %>% gather(Bancos,valores,-variables)
b %>% spread(variables,valores) #%>% View() #Distribuir las variables(serán columnas)
# según los valores
i<-b %>% spread(variables,valores)
i$Periodo= as.Date("2019-12-31")
#  i[is.na(i)]<-0
# Guardando la data en carpeta "dataprocesada"
setwd("C:/Users/Jose/Documents/GitHub/Sector-Financiero-Peru/data/dataprocesada/Informacion Estadistica de Banca Multiple/Indicadores de las Empresas Bancarias/Indicadores Financieros")
saveRDS(i,file="di2019.RDS")
di2019<-i
#View(di2019)
} # DICIEMBRE 2019
